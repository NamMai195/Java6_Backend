spring:
  config:
    activate:
      on-profile: test # Kích hoạt cấu hình này khi profile 'test' chạy

  # --- Cấu hình Datasource H2 cho Test ---
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
    driverClassName: org.h2.Driver
    username: sa
    password:

  # --- Cấu hình JPA cho Test ---
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop # Tạo và xóa schema mỗi lần test
    show-sql: false
    properties:
      hibernate:
        format_sql: true

  # --- Cấu hình OAuth2 Client Giả Lập (Giữ cấu trúc chuẩn) ---
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: dummy-google-client-id
            client-secret: dummy-google-client-secret
            scope:
              - email
              - profile

# --- Cấu hình Brevo Giả Lập (Giữ cấu trúc chuẩn) ---
brevo:
  api-key: dummy-brevo-api-key

# --- Cấu hình App cho Test (Giữ cấu trúc chuẩn) ---
app:
  base-url: http://localhost:8080
  email:
    verification-template-id: 1
    defaults:
      login-link: https://dummy-test.com/login
      service-name: Test Application
      company-name: Test Company Inc.
      company-address: 123 Test Street
      support-phone: 987654
      faq-link: https://dummy-test.com/faq
      policy-link: https://dummy-test.com/policy
      company-slogan: Testing Rocks
  frontend-url: http://localhost:9999
  oauth2:
    redirect-path: /testcallback

# --- Cấu hình JWT Giả Lập (Giữ cấu trúc chuẩn) ---
jwt:
  expiryMinutes: 60
  expiryDay: 7
  accessKey: ZXhhbXBsZS1zZWNyZXQtYWNjZXNzLWtleS1mb3Itand0LXNwcmluZ2Jvb3QxMjM0NTY3ODkw
  refreshKey: ZXhhbXBsZS1zZWNyZXQtcmVmcmVzaC1rZXktZm9yLWp3dC1zcHJpbmdib290MTIzNDU2Nzg5MA==

# --- Cấu hình Springdoc/OpenAPI cho Test ---
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

openapi:
  service:
    api-docs: backend-service-test
    server: ${BACKEND_SERVICE:http://localhost:8080}
    title: Backend service (Test)
    version: 1.0.0

# --- THÊM MỚI: Định nghĩa trực tiếp các placeholder cho @Value("${...}") ---
# Mục đích: Cung cấp giá trị nếu code dùng trực tiếp tên biến môi trường
# Lưu ý: Nên sửa code để dùng đường dẫn property (ví dụ ${brevo.api-key}) thay vì cách này.

BREVO_API_KEY: dummy-brevo-api-key # Giá trị giả cho placeholder trực tiếp
GOOGLE_CLIENT_ID: dummy-google-client-id # Giá trị giả cho placeholder trực tiếp
GOOGLE_CLIENT_SECRET: dummy-google-client-secret # Giá trị giả cho placeholder trực tiếp
JWT_ACCESS_KEY: ZXhhbXBsZS1zZWNyZXQtYWNjZXNzLWtleS1mb3Itand0LXNwcmluZ2Jvb3QxMjM0NTY3ODkw # Giá trị giả cho placeholder trực tiếp
JWT_REFRESH_KEY: ZXhhbXBsZS1zZWNyZXQtcmVmcmVzaC1rZXktZm9yLWp3dC1zcHJpbmdib290MTIzNDU2Nzg5MA== # Giá trị giả cho placeholder trực tiếp
# SPRING_DATASOURCE_PASSWORD: # Thường không cần vì dùng H2 với password rỗng, nhưng có thể thêm nếu cần
BREVO_SENDER_EMAIL: dummy-sender@test.com # Giá trị giả cho placeholder trực tiếp
